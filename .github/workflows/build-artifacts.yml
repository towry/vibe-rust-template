name: "Build release artifacts"

on:
  workflow_call:
    inputs:
      tag_name:
        description: "Tag name (e.g. v1.2.3)"
        required: true
        type: string
      bin_name:
        description: "Binary name (must match Cargo.toml package name)"
        required: false
        default: ""
        type: string
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag name (e.g. v1.2.3)"
        required: true
        type: string
      bin_name:
        description: "Binary name (must match Cargo.toml package name)"
        required: false
        default: ""
        type: string

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always
  BIN_NAME: vibe-rust

jobs:
  build:
    name: Build & Upload Binaries
    runs-on: ${{ matrix.os }}
    env:
      VERSION: ${{ inputs.tag_name || github.event.release.tag_name }}
    strategy:
      matrix:
        build: [linux, macos-arm]
        include:
          - build: linux
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
          - build: macos-arm
            os: macos-latest
            rust: stable
            target: aarch64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set binary name
        shell: bash
        run: |
          if [ -n "${{ inputs.bin_name }}" ]; then
            echo "BIN_NAME=${{ inputs.bin_name }}" >> $GITHUB_ENV
            echo "Using input binary name: ${{ inputs.bin_name }}"
          else
            echo "BIN_NAME=${{ env.BIN_NAME }}" >> $GITHUB_ENV
            echo "Using default binary name: ${{ env.BIN_NAME }}"
          fi

      - name: Validate required inputs
        shell: bash
        run: |
          if [ -z "$BIN_NAME" ]; then
            echo "Error: BIN_NAME was not set properly in previous step"
            echo "This should not happen - please check the 'Set binary name' step"
            exit 1
          fi
          echo "Using binary name: $BIN_NAME"

      - name: Build and package
        id: build
        uses: ./.github/actions/build-rust
        with:
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.rust }}
          bin_name: ${{ env.BIN_NAME }}
          version: ${{ env.VERSION }}

      - name: Upload asset
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          artifacts: ${{ steps.build.outputs.asset_path }}
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
