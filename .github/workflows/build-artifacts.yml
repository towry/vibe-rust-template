name: "Build release artifacts"

on:
  workflow_call:
    inputs:
      tag_name:
        description: "Tag name (e.g. v1.2.3)"
        required: true
        type: string
      bin_name:
        description: "Binary name (must match Cargo.toml package name)"
        required: false
        default: ""
        type: string
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag name (e.g. v1.2.3)"
        required: true
        type: string
      bin_name:
        description: "Binary name (must match Cargo.toml package name)"
        required: false
        default: ""
        type: string

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always
  BIN_NAME: vibe-rust

jobs:
  build:
    name: Build & Upload Binaries
    runs-on: ${{ matrix.os }}
    env:
      VERSION: ${{ inputs.tag_name || github.event.release.tag_name }}
    strategy:
      matrix:
        build: [linux, macos-arm]
        include:
          - build: linux
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
          - build: macos-arm
            os: macos-latest
            rust: stable
            target: aarch64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set binary name
        shell: bash
        run: |
          if [ -n "${{ inputs.bin_name }}" ]; then
            echo "BIN_NAME=${{ inputs.bin_name }}" >> $GITHUB_ENV
            echo "Using input binary name: ${{ inputs.bin_name }}"
          else
            echo "BIN_NAME=${{ env.BIN_NAME }}" >> $GITHUB_ENV
            echo "Using default binary name: ${{ env.BIN_NAME }}"
          fi

      - name: Validate required inputs
        shell: bash
        run: |
          if [ -z "$BIN_NAME" ]; then
            echo "Error: BIN_NAME was not set properly in previous step"
            echo "This should not happen - please check the 'Set binary name' step"
            exit 1
          fi
          echo "Using binary name: $BIN_NAME"

      - name: Disable man-db triggers (Linux)
        if: runner.os == 'Linux'
        run: |
          # https://github.com/actions/runner-images/issues/10977
          # Disables man-db triggers, which have been a cause of huge (but variable) delays in github action jobs
          # completing; we're seeing pauses on this step of 120+ seconds in some rare cases.
          echo "set man-db/auto-update false" | sudo debconf-communicate
          sudo dpkg-reconfigure man-db

      - name: Install deps (Linux)
        if: runner.os == 'Linux'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libspeechd-dev libxkbcommon-dev libssl-dev libgtk-3-dev
          version: 1.0

      - name: Install toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}

      - name: Cache cargo artifacts
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --release --target ${{ matrix.target }} --verbose

      - name: Package
        shell: bash
        run: |
          version="${VERSION#v}" # strip leading v
          staging="${BIN_NAME}-${version}-${{ matrix.target }}"
          mkdir -p "$staging"
          cp README.md "$staging/"
          # Use the actual binary name from Cargo.toml
          cp target/${{ matrix.target }}/release/${BIN_NAME} "$staging/${BIN_NAME}"
          tar czf "$staging.tar.gz" "$staging"
          echo "ASSET=$staging.tar.gz" >> $GITHUB_ENV

      - name: Upload asset
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          artifacts: ${{ env.ASSET }}
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
